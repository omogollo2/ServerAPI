openapi: 3.0.0
info:
  title: Server API
  description: API del servidor
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/omogollo2/ServerAPI/1.0.0
  description: SwaggerHub API Auto Mocking
paths:
  /product/{productId}:
    get:
      tags:
      - product
      summary: devuelve la información de un producto
      operationId: get_product
      parameters:
      - name: productId
        in: path
        description: id del producto a consultar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: producto obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: no se ha encontrado el producto
      x-openapi-router-controller: swagger_server.controllers.product_controller
    put:
      tags:
      - product
      summary: actuliza la información de un producto
      operationId: put_product
      parameters:
      - name: productId
        in: path
        description: id del producto a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        "200":
          description: producto actualizado con exito
        "404":
          description: no existe el producto que se desea actualizar
      x-openapi-router-controller: swagger_server.controllers.product_controller
    delete:
      tags:
      - product
      summary: borrar un producto
      operationId: delete_product
      parameters:
      - name: productId
        in: path
        description: id del producto a borrar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: producto borrado con exito
      x-openapi-router-controller: swagger_server.controllers.product_controller
  /stock:
    get:
      tags:
      - stock
      summary: devuelve el stock de la tienda
      description: |
        By passing in the appropriate options, you can search for
        available inventory in the system
      operationId: search_stock
      parameters:
      - name: searchString
        in: query
        description: parametro que permite obtener el stock de un determinado producto
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: limit
        in: query
        description: número máximo de productos de los que se devolverá info
        required: false
        style: form
        explode: true
        schema:
          maximum: 5
          minimum: 0
          type: integer
          format: int32
      responses:
        "200":
          description: existen resultados que satisfacen los parametros
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StockProduct'
                x-content-type: application/json
        "400":
          description: error en la información requerida
      x-openapi-router-controller: swagger_server.controllers.stock_controller
  /stock/{productId}:
    put:
      tags:
      - stock
      summary: actualiza el stock de un producto
      description: actualiza el stock de un producto con determinado identificador
      operationId: put_stock
      parameters:
      - name: productId
        in: path
        description: id del producto a actualizar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/StockProduct'
      responses:
        "200":
          description: stock updated
        "404":
          description: producto no encontrado'
      x-openapi-router-controller: swagger_server.controllers.stock_controller
  /order:
    post:
      tags:
      - order
      summary: crea un nuevo pedido
      operationId: post_order
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
      responses:
        "200":
          description: pedido creado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "400":
          description: datos de pedido incorrectos
      x-openapi-router-controller: swagger_server.controllers.order_controller
  /order/{orderId}:
    get:
      tags:
      - order
      summary: Devuelve los datos un pedido
      operationId: get_order
      parameters:
      - name: orderId
        in: path
        description: id del pedido a consultar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: pedido encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        "404":
          description: pedido no encontrado en el sistema
      x-openapi-router-controller: swagger_server.controllers.order_controller
    delete:
      tags:
      - order
      summary: borra un pedido
      operationId: delete_order
      parameters:
      - name: orderId
        in: path
        description: id del pedido a eliminar
        required: true
        style: simple
        explode: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: pedido eliminado con exito
        "404":
          description: pedido no encontrado
      x-openapi-router-controller: swagger_server.controllers.order_controller
components:
  schemas:
    Product:
      required:
      - id
      - name
      - price
      type: object
      properties:
        id:
          type: string
          example: smartstick_stick01
        name:
          type: string
          example: baston
        price:
          type: integer
          format: int32
          example: 149
      example:
        price: 149
        name: baston
        id: smartstick_stick01
    StockProduct:
      required:
      - product
      - stock
      type: object
      properties:
        product:
          $ref: '#/components/schemas/Product'
        stock:
          type: integer
          format: int32
          example: 76
      example:
        product:
          price: 149
          name: baston
          id: smartstick_stick01
        stock: 76
    Client:
      required:
      - address
      - birthDate
      - name
      type: object
      properties:
        name:
          type: string
          example: Antonio Garcia Garcia
        address:
          type: string
          example: Calle Peral 15 28015 Madrid
        birthDate:
          type: string
          format: date
          example: 1945-07-21
      example:
        address: Calle Peral 15 28015 Madrid
        name: Antonio Garcia Garcia
        birthDate: 1945-07-21T00:00:00.000+0000
    Order:
      required:
      - client
      - id
      - items
      - orderDate
      - shipAddress
      - shipDate
      - totalPrice
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 12345
        orderDate:
          type: string
          format: date
          example: 2020-11-20
        shipDate:
          type: string
          format: date
          example: 2020-11-27
        items:
          type: array
          items:
            $ref: '#/components/schemas/Product'
        totalPrice:
          type: integer
          format: int32
          example: 399
        shipAddress:
          type: string
          example: Calle Manzano 5 28010 Madrid
        client:
          $ref: '#/components/schemas/Client'
      example:
        totalPrice: 399
        client:
          address: Calle Peral 15 28015 Madrid
          name: Antonio Garcia Garcia
          birthDate: 1945-07-21T00:00:00.000+0000
        id: 12345
        shipDate: 2020-11-27T00:00:00.000+0000
        orderDate: 2020-11-20T00:00:00.000+0000
        items:
        - price: 149
          name: baston
          id: smartstick_stick01
        - price: 149
          name: baston
          id: smartstick_stick01
        shipAddress: Calle Manzano 5 28010 Madrid


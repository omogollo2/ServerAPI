# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Client(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, name: str=None, address: str=None, birth_date: date=None):  # noqa: E501
        """Client - a model defined in Swagger

        :param name: The name of this Client.  # noqa: E501
        :type name: str
        :param address: The address of this Client.  # noqa: E501
        :type address: str
        :param birth_date: The birth_date of this Client.  # noqa: E501
        :type birth_date: date
        """
        self.swagger_types = {
            'name': str,
            'address': str,
            'birth_date': date
        }

        self.attribute_map = {
            'name': 'name',
            'address': 'address',
            'birth_date': 'birthDate'
        }
        self._name = name
        self._address = address
        self._birth_date = birth_date

    @classmethod
    def from_dict(cls, dikt) -> 'Client':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Client of this Client.  # noqa: E501
        :rtype: Client
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self) -> str:
        """Gets the name of this Client.


        :return: The name of this Client.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name: str):
        """Sets the name of this Client.


        :param name: The name of this Client.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def address(self) -> str:
        """Gets the address of this Client.


        :return: The address of this Client.
        :rtype: str
        """
        return self._address

    @address.setter
    def address(self, address: str):
        """Sets the address of this Client.


        :param address: The address of this Client.
        :type address: str
        """
        if address is None:
            raise ValueError("Invalid value for `address`, must not be `None`")  # noqa: E501

        self._address = address

    @property
    def birth_date(self) -> date:
        """Gets the birth_date of this Client.


        :return: The birth_date of this Client.
        :rtype: date
        """
        return self._birth_date

    @birth_date.setter
    def birth_date(self, birth_date: date):
        """Sets the birth_date of this Client.


        :param birth_date: The birth_date of this Client.
        :type birth_date: date
        """
        if birth_date is None:
            raise ValueError("Invalid value for `birth_date`, must not be `None`")  # noqa: E501

        self._birth_date = birth_date
